<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

  <!--<context:annotation-config/>-->

  <!-- 将session放入redis -->
  <!-- redis 配置 -->
  <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="locations">
      <list>
        <value>classpath:config/redis.properties</value>
        <value>classpath:config/session.properties</value>
      </list>
    </property>
    <property name="fileEncoding" value="UTF-8"/>
  </bean>
  <bean id="redisPropertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
    <property name="properties" ref="configProperties"/>
  </bean>


  <!-- @Important -->
  <!-- Cookie strategy is the framework default strategy,But exist cross-domain problem -->
  <!-- Reason: org.springframework.session.web.http.DefaultCookieSerializer.getCookiePath(HttpServletRequest) So windawings modified it-->
  <bean id="cookieHttpSessionStrategy" class="com.musicbeat.web.utils.CustomCookieHttpSessionStrategy" />

  <bean id="httpSessionMonitorListener" class="com.musicbeat.web.utils.HttpSessionMonitorListener" />

  <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
    <property name="redisNamespace" value="musicbeat" />
    <property name="maxInactiveIntervalInSeconds" value="${maxInactiveIntervalInSeconds}" />
    <property name="httpSessionStrategy" ref="cookieHttpSessionStrategy"/>
    <property name="httpSessionListeners">
      <list>
        <ref bean="httpSessionMonitorListener"/>
      </list>
    </property>
  </bean>

  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxTotal" value="${redis.pool.maxTotal}" />
    <property name="maxIdle" value="${redis.pool.maxIdle}" />
    <property name="minIdle" value="${redis.pool.minIdle}" />
    <property name="blockWhenExhausted" value="${redis.pool.blockWhenExhausted}" />
    <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
    <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    <property name="testOnReturn" value="${redis.pool.testOnReturn}" />
    <property name="testWhileIdle" value="${redis.pool.testWhileIdle}" />
    <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
    <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
    <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}" />
  </bean>

  <!-- @Important -->
  <!-- Autowired By Type Of org.springframework.data.redis.connection.RedisConnectionFactory -->
  <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <property name="hostName" value="${redis.host}" />
    <property name="port" value="${redis.port}" />
    <!-- Mybatis-Redis NOAUTH required -->
    <!--<property name="password" value="${redis.password}" />-->
    <!--<property name="database" value="${redis.database}" />-->
    <property name="timeout" value="${redis.timeout}" />
    <property name="poolConfig" ref="jedisPoolConfig" />
    <property name="usePool" value="${redis.usePool}" />
  </bean>

  <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

  <bean id="redisTemplate" name="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    <property name="connectionFactory" ref="jedisConnectionFactory" />
    <property name="keySerializer" ref="stringSerializer" />
    <property name="enableTransactionSupport" value="true" />
  </bean>
</beans>