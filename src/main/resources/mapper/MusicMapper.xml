<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.musicbeat.web.mapper.MusicMapper">

  <!--设置二级缓存-->
  <cache eviction="LRU" type="org.mybatis.caches.redis.RedisCache"/>

  <resultMap id="BaseResultMap" type="com.musicbeat.web.model.Music">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="lyrics" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="link" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="duration" javaType="java.util.Date" jdbcType="TIME" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List">
    id, name, lyrics, link, duration
  </sql>

  <select id="selectByPrimaryKey" useCache="true" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from music
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" flushCache="true" parameterType="java.lang.Integer">
    delete from music
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" flushCache="true" parameterType="com.musicbeat.web.model.Music">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into music (name, lyrics, link, 
      duration)
    values (#{name,jdbcType=VARCHAR}, #{lyrics,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, 
      #{duration,jdbcType=TIME})
  </insert>

  <insert id="insertSelective" flushCache="true" parameterType="com.musicbeat.web.model.Music">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into music
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="lyrics != null">
        lyrics,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="duration != null">
        duration,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="lyrics != null">
        #{lyrics,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=TIME},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" flushCache="true" parameterType="com.musicbeat.web.model.Music">
    update music
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="lyrics != null">
        lyrics = #{lyrics,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=TIME},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" flushCache="true" parameterType="com.musicbeat.web.model.Music">
    update music
    set name = #{name,jdbcType=VARCHAR},
      lyrics = #{lyrics,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=TIME}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>