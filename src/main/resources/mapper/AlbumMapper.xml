<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.musicbeat.web.mapper.AlbumMapper">

  <!--设置二级缓存-->
  <cache eviction="LRU" type="org.mybatis.caches.redis.RedisCache"/>

  <resultMap id="BaseResultMap" type="com.musicbeat.web.model.Album">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="release_time" jdbcType="DATE" property="releaseTime" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.musicbeat.web.model.Album">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>

  <resultMap id="AlbumMusicMap" type="com.musicbeat.web.model.Album" extends="ResultMapWithBLOBs">
    <collection property="musics" ofType="com.musicbeat.web.model.Music">
      <id property="id" column="m_id"/>
      <result property="name" column="m_name"/>
      <result property="link" column="m_link"/>
      <result property="lyrics" column="m_lyrics"/>
    </collection>
  </resultMap>
  
  <resultMap id="SingerMap" type="com.musicbeat.web.model.Singer">
    <id property="id" column="s_id"/>
    <result property="name" column="s_name"/>
    <result property="gender" column="s_gender"/>
    <result property="lang" column="s_lang"/>
    <result property="picture" column="s_picture"/>
    <result property="introduction" column="s_introduction"/>
    <result property="isBand" column="s_isBand"/>
  </resultMap>

  <resultMap id="AlbumSingerMap" type="com.musicbeat.web.model.Album" extends="BaseResultMap">
    <association property="singer" column="album_singer_id" javaType="com.musicbeat.web.model.Singer" resultMap="SingerMap"/>
  </resultMap>

  <resultMap id="SingerAlbumMusicMap" type="com.musicbeat.web.model.Album" extends="BaseResultMap">
    <association property="singer" column="Singer_Album_Music_id" resultMap="SingerMap"/>
    <collection property="musics" ofType="com.musicbeat.web.model.Music">
      <id property="id" column="m_id"/>
      <result property="name" column="m_name"/>
      <result property="link" column="m_link"/>
      <result property="lyrics" column="m_lyrics"/>
    </collection>
  </resultMap>


  <sql id="Base_Column_List">
    id, name, release_time, picture
  </sql>

  <sql id="Blob_Column_List">
    introduction
  </sql>

  <!--用singer的id得到歌曲集-->
  <select id="selectMusicsBySingerId" parameterType="Integer" resultMap="SingerAlbumMusicMap">
    select s.id as s_id,s.name as s_name,s.gender as s_gender,s.lang as s_lang,s.picture as s_picture,s.introduction as s_introduction,
    s.is_band as s_isBand,a.id,a.name,a.introduction,a.release_time,a.picture,
    m.id as m_id,m.name as m_name,m.link as m_link,m.lyrics as m_lyrics
    from album a
    right join singer_album sa on a.id=sa.aid
    right join singer s on sa.sid=s.id
    left join music_album ma on ma.aid=a.id
    left join music m on m.id=ma.mid
    where s.id = #{id}
  </select>

  <select id="selectByPrimaryKey" useCache="true" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from album
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByAlbumName" useCache="true" parameterType="java.lang.String" resultType="Integer">
    select id from album
    <where>
      <if test="name != null and name != ''">
        <choose>
          <when test="like">
            and name = "%"#{name,jdbcType=VARCHAR}"%"
          </when>
          <otherwise>
            and name = #{name,jdbcType=VARCHAR}
          </otherwise>
        </choose>
      </if>
    </where>
  </select>

  <select id="selectByReleaseTime" useCache="true" parameterType="java.util.HashMap" resultType="Integer">
    select id from album
    <where>
      <if test="minTime != null">
        <![CDATA[
          AND release_time>#{minTime,jdbcType=DATE}
        ]]>
      </if>
      <if test="maxTime != null">
        <![CDATA[
          AND release_time<=#{maxTime,jdbcType=DATE}
        ]]>
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" flushCache="true" parameterType="java.lang.Integer">
    delete from album
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert flushCache="true" id="insert" parameterType="com.musicbeat.web.model.Album">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into album (name, release_time, picture, 
      introduction)
    values (#{name,jdbcType=VARCHAR}, #{releaseTime,jdbcType=DATE}, #{picture,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=LONGVARCHAR})
  </insert>

  <insert flushCache="true" id="insertSelective" parameterType="com.musicbeat.web.model.Album">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into album
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=DATE},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update flushCache="true" id="updateByPrimaryKeySelective" parameterType="com.musicbeat.web.model.Album">
    update album
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=DATE},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update flushCache="true" id="updateByPrimaryKeyWithBLOBs" parameterType="com.musicbeat.web.model.Album">
    update album
    set name = #{name,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=DATE},
      picture = #{picture,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update flushCache="true" id="updateByPrimaryKey" parameterType="com.musicbeat.web.model.Album">
    update album
    set name = #{name,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=DATE},
      picture = #{picture,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectAllByReleaseTime" parameterType="Integer" resultMap="SingerAlbumMusicMap">
    select s.id as s_id,s.name as s_name,s.gender as s_gender,s.lang as s_lang,s.picture as s_picture,s.introduction as s_introduction,
    s.is_band as s_isBand,a.id,a.name,a.introduction,a.release_time,a.picture,
    m.id as m_id,m.name as m_name,m.link as m_link,m.lyrics as m_lyrics
    from album a
    right join singer_album sa on a.id=sa.aid
    right join singer s on sa.sid=s.id
    left join music_album ma on ma.aid=a.id
    left join music m on m.id=ma.mid
    order by a.release_time DESC
  </select>

  <select id="selectSingerById" parameterType="Integer" resultMap="AlbumSingerMap">
    select a.id,a.name,a.introduction,a.release_time,a.picture,s.id as s_id,
    s.name as s_name,s.gender as s_gender,s.lang as s_lang,s.picture as s_picture,
    s.introduction as s_introduction,s.is_band as s_isBand
    from album a left join singer_album sa on a.id = sa.aid
     left join singer s on sa.sid = s.id
     where a.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectMusicsById" parameterType="Integer" resultMap="AlbumMusicMap">
    select a.id,a.name,a.introduction,a.release_time,a.picture,
    m.id as m_id,m.name as m_name,m.link as m_link,m.lyrics as m_lyrics
    from music m left join music_album ma on m.id = ma.mid
    left join album a on ma.aid = a.id
    where a.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectAlbumsByAlbumName" parameterType="String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from album
    <where>
      <if test="name != null and name != ''">
        <choose>
          <when test="like">
            and name = "%"#{name,jdbcType=VARCHAR}"%"
          </when>
          <otherwise>
            and name = #{name,jdbcType=VARCHAR}
          </otherwise>
        </choose>
      </if>
    </where>
  </select>
</mapper>