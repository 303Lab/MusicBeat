<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd ">

  <!-- 加载一个properties文件 -->
  <bean id="mysqlPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:config/jdbc.properties"/>
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
  </bean>

  <!-- 配置数据源 -->
  <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
    <property name="driverClassName" value="${driverClass}"/>
    <property name="url" value="${jdbcUrl}"/>
    <property name="username" value="${jdbcuser}"/>
    <property name="password" value="${password}"/>
    <!-- 连接池最大数量 -->
    <property name="maxActive" value="${mysql.maxActive}"/>
    <!-- 连接池最大空闲 -->
    <property name="maxIdle" value="${mysql.maxIdle}"/>
    <!-- 连接池最小空闲 -->
    <property name="minIdle" value="${mysql.minIdle}"/>
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait" value="${mysql.maxWait}"/>
    <!-- 初始化连接大小 -->
    <property name="initialSize" value="${mysql.initialSize}"/>
    <property name="testWhileIdle" value="${mysql.testWhileIdle}"/>
    <property name="testOnBorrow" value="${mysql.testOnBorrow}"/>
    <property name="testOnReturn" value="${mysql.testOnReturn}"/>
    <property name="validationQuery" value="${mysql.validationQuery}"/>
    <property name="validationInterval" value="${mysql.validationInterval}"/>
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="${mysql.timeBetweenEvictionRunsMillis}"/>
    <!-- 1800秒，也就是30分钟 -->
    <property name="removeAbandonedTimeout" value="${mysql.removeAbandonedTimeout}"/>
    <!-- 打开removeAbandoned功能 -->
    <property name="removeAbandoned" value="${mysql.removeAbandoned}"/>
    <!-- 打开abandoned连接时输出错误日志 -->
    <property name="logAbandoned" value="${mysql.logAbandoned}"/>
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="${mysql.minEvictableIdleTimeMillis}"/>
    <property name="jmxEnabled" value="${mysql.jmxEnabled}"/>
  </bean>

  <!--sqlsessionFactory bean-->
  <!-- mybatis和spring完美整合，不需要mybatis的配置映射文件 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <!-- 自动扫描mapping.xml文件 -->
    <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
    <!-- MyBatis with Redis Cache & PageHelper -->
    <property name="configLocation" value="classpath:config/mybatis/config.xml" />
  </bean>

  <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.musicbeat.web.mapper"/>
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
  </bean>

  <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="append*" propagation="REQUIRED" />
      <tx:method name="insert*" propagation="REQUIRED" />
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" />
      <tx:method name="modify*" propagation="REQUIRED" />
      <tx:method name="edit*" propagation="REQUIRED" />
      <tx:method name="delete*" propagation="REQUIRED" />
      <tx:method name="remove*" propagation="REQUIRED" />
      <tx:method name="repair" propagation="REQUIRED" />
      <tx:method name="delAndRepair" propagation="REQUIRED" />

      <tx:method name="get*" propagation="SUPPORTS" />
      <tx:method name="find*" propagation="SUPPORTS" />
      <tx:method name="load*" propagation="SUPPORTS" />
      <tx:method name="search*" propagation="SUPPORTS" />
      <tx:method name="datagrid*" propagation="SUPPORTS" />

      <tx:method name="*" propagation="SUPPORTS" />
    </tx:attributes>
  </tx:advice>
</beans>